<?php
/** @package Ercco::Model::DAO */

/** import supporting libraries */
require_once("verysimple/Phreeze/Phreezable.php");
require_once("DispositivoMap.php");

/**
 * DispositivoDAO provides object-oriented access to the dispositivo table.  This
 * class is automatically generated by ClassBuilder.
 *
 * WARNING: THIS IS AN AUTO-GENERATED FILE
 *
 * This file should generally not be edited by hand except in special circumstances.
 * Add any custom business logic to the Model class which is extended from this DAO class.
 * Leaving this file alone will allow easy re-generation of all DAOs in the event of schema changes
 *
 * @package Ercco::Model::DAO
 * @author ClassBuilder
 * @version 1.0
 */
class DispositivoDAO extends Phreezable
{
	/** @var int */
	public $IdDispositivo;

	/** @var string */
	public $Descricao;

	/** @var string */
	public $Posicao;

	/** @var string */
	public $Nome;

	/** @var int */
	public $IdTipo;

	/** @var int */
	public $IdPlataforma;

	/** @var string */
	public $Patrimonio;

	/** @var string */
	public $Processador;

	/** @var string */
	public $Hd;

	/** @var string */
	public $Memoria;

	/** @var int */
	public $IdRack;

	/** @var int */
	public $IdPai;

	/** @var string */
	public $Fabricante;

	/** @var string */
	public $Modelo;


	/**
	 * Returns a dataset of Dispositivo objects with matching IdPai
	 * @param Criteria
	 * @return DataSet
	 */
	public function GetIdPaiDispositivos($criteria = null)
	{
		return $this->_phreezer->GetOneToMany($this, "rel_id_dipositivopai_dispositivofilho", $criteria);
	}

	/**
	 * Returns the foreign object based on the value of IdPlataforma
	 * @return Plataforma
	 */
	public function GetIdPlataforma()
	{
		return $this->_phreezer->GetManyToOne($this, "fk_plataforma_dispoistivo");
	}

	/**
	 * Returns the foreign object based on the value of IdRack
	 * @return Rack
	 */
	public function GetIdRack()
	{
		return $this->_phreezer->GetManyToOne($this, "fk_rack_dispositivo");
	}

	/**
	 * Returns the foreign object based on the value of IdTipo
	 * @return Tipo
	 */
	public function GetIdTipo()
	{
		return $this->_phreezer->GetManyToOne($this, "fk_tipo_dispositivo");
	}

	/**
	 * Returns the foreign object based on the value of IdPai
	 * @return Dispositivo
	 */
	public function GetIdPaiDispositivo()
	{
		return $this->_phreezer->GetManyToOne($this, "rel_id_dipositivopai_dispositivofilho");
	}


}
?>